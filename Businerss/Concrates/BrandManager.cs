using Businerss.Abstracts;
using Businerss.Dtos.Requests;
using Businerss.Dtos.Responses;
using DataAccess.Abstracts;
using Entites.Concrates;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Businerss.Concrates;

public class BrandManager : IBrandService
{
    IBrandDal _brandDal;
public BrandManager(IBrandDal brandDal)
    {
        _brandDal = brandDal;
    }

   CreatedBrandResponse IBrandService.Add(CreatedBrandRequest createBrandRequest)


    {
        Brand brand = new();
        brand.Name = createBrandRequest.Name;
        brand.CreatedDate = DateTime.Now;
        brand.Id = 4; // This should ideally be generated by the database or a service
        _brandDal.Add(brand);

        CreatedBrandResponse createdBrandResponse = new CreatedBrandResponse();
        createdBrandResponse.Name = brand.Name;
        createdBrandResponse.Id = brand.Id;
        createdBrandResponse.CreatedDate =brand.CreatedDate;
       
        return createdBrandResponse;

    }

    public List<GetAllBrandResponse> GetAll()
    {
        List<Brand> brands = _brandDal.GetAll();
        List<GetAllBrandResponse> getAllBrandResponses = new List<GetAllBrandResponse>();

        foreach (Brand brand in brands)
        {
            GetAllBrandResponse getAllBrandResponse = new GetAllBrandResponse();
            getAllBrandResponse.Name = brand.Name;
            getAllBrandResponse.Id = brand.Id;
            getAllBrandResponse.CreatedDate = brand.CreatedDate;
            getAllBrandResponses.Add(getAllBrandResponse);

        }
        return getAllBrandResponses;

    }

    
    
}




